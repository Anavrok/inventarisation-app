{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/crud.service\";\nexport class ProductDetailComponent {\n  constructor(formBuilder, router, activeRout, ngZone, crudService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.activeRout = activeRout;\n    this.ngZone = ngZone;\n    this.crudService = crudService;\n    this.getId = this.activeRout.snapshot.paramMap.get('id');\n    this.crudService.getProduct(this.getId).subscribe(res => {\n      console.log(res['product']);\n      this.updateForm.setValue({\n        name: res['product']['name'],\n        barcode: res['product']['barcode'],\n        description: res['product']['description'],\n        manufacturer: res['product']['manufacturer'],\n        category: res['product']['category']\n      });\n    });\n    this.updateForm = this.formBuilder.group({\n      name: [''],\n      barcode: [''],\n      description: [''],\n      manufacturer: [''],\n      category: ['']\n    });\n  }\n  ngOnInit() {}\n  onUpdate() {\n    this.crudService.updateProduct(this.getId, this.updateForm.value).subscribe(() => {\n      console.log('Data updated successfully');\n      this.ngZone.run(() => this.router.navigateByUrl('/products-list'));\n    }, err => {\n      console.log(err);\n    });\n  }\n}\nProductDetailComponent.ɵfac = function ProductDetailComponent_Factory(t) {\n  return new (t || ProductDetailComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.CrudService));\n};\nProductDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductDetailComponent,\n  selectors: [[\"app-product-detail\"]],\n  decls: 27,\n  vars: 1,\n  consts: [[1, \"row\", \"justify-content-center\", \"mt-5\"], [1, \"col-md-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"barcode\", \"required\", \"\", 1, \"form-control\"], [\"formControlName\", \"description\", \"rows\", \"3\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"manufacturer\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"category\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function ProductDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function ProductDetailComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onUpdate();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Nazwa:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Kod kreskowy:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 4);\n      i0.ɵɵtext(13, \"Opis:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"textarea\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 4);\n      i0.ɵɵtext(17, \"Producent:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 4);\n      i0.ɵɵtext(21, \"Kategoria:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"button\", 10);\n      i0.ɵɵtext(25, \"Update\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtext(26, \">\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,sBAAsB;EAKjCC,YACSC,WAAwB,EACvBC,MAAc,EACdC,UAA0B,EAC1BC,MAAc,EACdC,WAAwB;IAJzB,gBAAW,GAAXJ,WAAW;IACV,WAAM,GAANC,MAAM;IACN,eAAU,GAAVC,UAAU;IACV,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IAEnB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,UAAU,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACxD,IAAI,CAACJ,WAAW,CAACK,UAAU,CAAC,IAAI,CAACJ,KAAK,CAAC,CAACK,SAAS,CAACC,GAAG,IAAG;MACtDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,SAAS,CAAC,CAAC;MAC3B,IAAI,CAACG,UAAU,CAACC,QAAQ,CAAC;QACvBC,IAAI,EAAEL,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;QAC5BM,OAAO,EAAEN,GAAG,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;QAClCO,WAAW,EAAEP,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC;QAC1CQ,YAAY,EAAER,GAAG,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC;QAC5CS,QAAQ,EAAET,GAAG,CAAC,SAAS,CAAC,CAAC,UAAU;OACpC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACG,UAAU,GAAG,IAAI,CAACd,WAAW,CAACqB,KAAK,CAAC;MACvCL,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,YAAY,EAAE,CAAC,EAAE,CAAC;MAClBC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;EACH;EAEDE,QAAQ,IAGR;EAEAC,QAAQ;IACN,IAAI,CAACnB,WAAW,CAACoB,aAAa,CAAC,IAAI,CAACnB,KAAK,EAAC,IAAI,CAACS,UAAU,CAACW,KAAK,CAAC,CAC/Df,SAAS,CAAC,MAAI;MACbE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,IAAI,CAACV,MAAM,CAACuB,GAAG,CAAC,MAAK,IAAI,CAACzB,MAAM,CAAC0B,aAAa,CAAC,gBAAgB,CAAC,CAAC;IACnE,CAAC,EAAEC,GAAG,IAAG;MACPhB,OAAO,CAACC,GAAG,CAACe,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ;;AA9CW9B,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVnCC,8BAA6C;MAEVA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACpDD,8BAAkB;MACUA,sBAAM;MAAAA,iBAAQ;MACxCA,2BAAwE;MAC1EA,iBAAM;MACNA,8BAAkB;MACUA,6BAAa;MAAAA,iBAAQ;MAC/CA,4BAA2E;MAC7EA,iBAAM;MACNA,+BAAkB;MACUA,sBAAK;MAAAA,iBAAQ;MACvCA,+BAAiF;MACnFA,iBAAM;MACNA,+BAAkB;MACUA,2BAAU;MAAAA,iBAAQ;MAC5CA,4BAAgF;MAClFA,iBAAM;MACNA,+BAAkB;MACUA,2BAAU;MAAAA,iBAAQ;MAC5CA,4BAA4E;MAC9EA,iBAAM;MACNA,+BAAkB;MAC8BA,uBAAM;MAAAA,iBAAS;MAI/DA,oBACN;;;MA3BUA,eAAwB;MAAxBA,0CAAwB","names":["ProductDetailComponent","constructor","formBuilder","router","activeRout","ngZone","crudService","getId","snapshot","paramMap","get","getProduct","subscribe","res","console","log","updateForm","setValue","name","barcode","description","manufacturer","category","group","ngOnInit","onUpdate","updateProduct","value","run","navigateByUrl","err","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\frontend\\src\\app\\components\\product-detail\\product-detail.component.ts","C:\\xampp\\htdocs\\frontend\\src\\app\\components\\product-detail\\product-detail.component.html"],"sourcesContent":["import { Component, OnInit, NgZone  } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CrudService } from 'src/app/service/crud.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n\n  getId:any;\n  updateForm: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    private router: Router,\n    private activeRout: ActivatedRoute,\n    private ngZone: NgZone,\n    private crudService: CrudService\n  ) {\n    this.getId = this.activeRout.snapshot.paramMap.get('id');\n    this.crudService.getProduct(this.getId).subscribe(res => {\n      console.log(res['product'])\n      this.updateForm.setValue({\n        name: res['product']['name'],\n        barcode: res['product']['barcode'],\n        description: res['product']['description'],\n        manufacturer: res['product']['manufacturer'],\n        category: res['product']['category'],\n      });\n    });\n\n    this.updateForm = this.formBuilder.group({\n      name: [''],\n      barcode: [''],\n      description: [''],\n      manufacturer: [''],\n      category: [''],\n    });\n   }\n\n  ngOnInit(): void {\n\n\n  }\n\n  onUpdate():any {\n    this.crudService.updateProduct(this.getId,this.updateForm.value)\n    .subscribe(()=> {\n      console.log('Data updated successfully')\n      this.ngZone.run(()=> this.router.navigateByUrl('/products-list'))\n    },(err)=>{\n      console.log(err)\n    })\n  }\n\n}\n","<div class=\"row justify-content-center mt-5\">\n  <div class=\"col-md-4\">\n    <form [formGroup]=\"updateForm\" (ngSubmit)=\"onUpdate()\">\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Nazwa:</label>\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\" required>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Kod kreskowy:</label>\n        <input type=\"text\" formControlName=\"barcode\" class=\"form-control\" required>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Opis:</label>\n        <textarea formControlName=\"description\" class=\"form-control\" rows=\"3\"></textarea>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Producent:</label>\n        <input type=\"text\" formControlName=\"manufacturer\" class=\"form-control\" required>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\">Kategoria:</label>\n        <input type=\"text\" formControlName=\"category\" class=\"form-control\" required>\n      </div>\n      <div class=\"mb-3\">\n        <button type=\"submit\" class=\"btn btn-success\">Update</button>\n      </div>\n    </form>\n  </div>\n</div>>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}